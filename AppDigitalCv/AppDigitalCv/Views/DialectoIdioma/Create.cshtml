@using AppDigitalCv.Security
@model AppDigitalCv.ViewModels.LenguasVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create","DialectoIdioma",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="bs-container" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Lenguas
                <small> (Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i>Inicio</a></li>
                <li> <a href="#">Datos</a></li>
                <li class="active">Lenguas</li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header">

                    </div>
                    <div role="form">
                        <div class="box-body">
                            <!-- Aqui se llena el dropdownlist de idioma y sus procentajes -->
                            <div class="form-group col-lg-6">
                                <div class="form-group ">
                                    <label>Lengua:</label>
                                    @Html.DropDownList("idLengua", null, htmlAttributes: new { @class = "form-control input-sm", id = "IdDialecto" })
                                    @Html.ValidationMessageFor(model => model.idLengua, "", new { @class = "text-danger" })

                                </div>
                            </div>

                            <!-- Aqui se llena el dropdownloist de porcentaje de escritura -->
                            <div class="form-group  col-lg-6">
                                <div class="form-group ">
                                    <label>Escritura</label>
                                    @Html.DropDownList("strEscritura", null, htmlAttributes: new { @class = "form-control input-sm", id = "StrEscrituraProcentaje" })
                                    @Html.ValidationMessageFor(model => model.strEscritura, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Aqui se llena el dropdownList de porcentaje de lectura -->
                            <div class="form-group  col-lg-6">
                                <div class="form-group ">
                                    <label>Lectura</label>
                                    @Html.DropDownList("strLectura", null, htmlAttributes: new { @class = "form-control input-sm", id = "StrLecturaPorcentaje" })
                                    @Html.ValidationMessageFor(model => model.strLectura, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Aqui se llena el dropdownloist de porcentaje de entendimiento -->
                            <div class="form-group  col-lg-6">
                                <div class="form-group ">
                                    <label>Entendimiento</label>
                                    @Html.DropDownList("strEntendimiento", null, htmlAttributes: new { @class = "form-control input-sm", id = "StrEntendimientoPorcentaje" })
                                    @Html.ValidationMessageFor(model => model.strEntendimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <!-- Aqui se llena el dropdownList de porcentaje de comunicacion -->
                            <div class="form-group  col-lg-6">
                                <div class="form-group ">
                                    <label>Comunicación</label>
                                    @Html.DropDownList("strComunicacion", null, htmlAttributes: new { @class = "form-control input-sm", id = "StrComunicacionPorcentaje" })
                                    @Html.ValidationMessageFor(model => model.strComunicacion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-lg-6 btn-block">
                                <div class="form-group">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <input type="submit" value="Guardar Información" class="btn btn-sm btn-success" id="btnSubmit" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="input-sm">
            <!-- Agregamos la tabla de forma dinamica  style="display:none" -->
            <div class="form-group" id="addTable">
                <br />
                <table id="tblDialecto" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-hover">
                    <thead class="table table table-condensed table-bordered table-responsive table-hover" style="color:white; background-color:#428BCA; font-size:10px;">
                        <tr>
                            <th>Lengua</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tblBody"></tbody>
                </table>
                <!-- Establecemos el Modal que se va a presentar cuando demos click en la edicion de los datos-->
                <div class="modal fade" id="myModal1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                                <a href="#" class="close" data-dismiss="modal">&times;</a>
                                <h5 class="modal-title"><label style="font-size:medium;">Idiomas</label></h5>
                            </div>
                            <div class="modal-body" id="myModalBodyDiv1">
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="hiddenAlergiaId" />
                <!--Terminamos el modal de eliminacion-->
            </div>
        </div>
    </div>

}


<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />
@section scripts{

    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/Validate/DialectoIdiomas/validate-dialectos-idiomas-form.js"></script>


    <script>

        var AddEliminar = function (idDialecto) {

            var url = "/digitalcv/DialectoIdioma/GetDialectoById?idDialecto=" + idDialecto;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        var AddEditar = function (idDialecto) {

            var url = "/digitalcv/DialectoIdioma/GetDialectoByIdEdit?idDialecto=" + idDialecto;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        $(document).ready(function () {

             $('#IdDialecto').select2();
             $('#StrEscrituraProcentaje').select2();
             $('#StrLecturaPorcentaje').select2();
             $('#StrEntendimientoPorcentaje').select2();
             $('#StrComunicacionPorcentaje').select2();

            var oTable;

            BindDataTable();

            function BindDataTable() {

                if ($.fn.DataTable.isDataTable('#tblDialecto')) {
                    oTable.Draw();
                }
                else {
                    oTable = $('#tblDialecto').DataTable({

                        "bServerSide": true,
                        "sAjaxSource": '/digitalcv/DialectoIdioma/GetDialecto',
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            $.ajax({
                                type: "Get",
                                data: aoData,
                                url: sSource,
                                success: fnCallback
                            })
                        },
                        "pageLength": 10,
                        "paging": true,
                        "language": {

                            "sProcessing": "Procesando...",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "dataSrc": "",
                        "columns": [

                            { "data": "Dialecto.strDescripcion" },

                            {
                                "data": "id",
                                "render": function (id, type, full, meta) {

                                    return '<a href="#" onclick="AddEditar(' + id + ')"><i class="btn btn-sm btn-success glyphicon glyphicon-pencil"></i></a> <a href="#" onclick="AddEliminar(' + id + ')"><i class="btn btn-sm btn-danger glyphicon glyphicon-remove"></i></a>'
                                }
                            },

                        ]
                    });
                }
            }


        });

    </script>
}