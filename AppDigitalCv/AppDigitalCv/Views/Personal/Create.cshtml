@model AppDigitalCv.ViewModels.PersonalVM
@using AppDigitalCv.Security


<link href="~/Content/css/position-top.css" rel="stylesheet" />
@using (Html.BeginForm("Create", "Personal", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="bs-container">
    <section class="content-header">
        <h1>
            Datos Personales
            <small>(Agregar)</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
            <li> <a href="#">Personal</a></li>
            <li class="active">Datos Personales</li>
        </ol>
    </section>
    <br />
    <div class="row fix-position">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="box box-success">
                <div class="box-header with-border">

                </div>
                <div role="form">
                    <div class="box-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-lg-4 col-md-4 col-sm-12 col-xs-12">
                                    <label>Nacionalidad</label>
                                    @Html.DropDownListFor(model => model.idNacionalidad, null, new { @class = "form-control input-sm", id = "idNacionalidad" })
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label>Estado Civil:</label>
                                    @Html.DropDownListFor(model => model.IdEstadoCivil, null, htmlAttributes: new { @class = "form-control input-sm", id = "IdEstadoCivil" })
                                    @Html.ValidationMessageFor(model => model.IdEstadoCivil, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="etSexo">Sexo:</label>
                                    <br />
                                    <span>Femenino: </span> @Html.RadioButtonFor(model => model.StrGenero, "Femenino", new { id = "sexoF", required = "" })
                                    <span>Masculino: </span> @Html.RadioButtonFor(model => model.StrGenero, "Masculino", new { id = "sexoM", required = "" })
                                    <span>Otro: </span> @Html.RadioButtonFor(model => model.StrGenero, "Otro", new { id = "sexoO", required = "" })
                           
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="etcurp">Curp:</label>
                                    @Html.TextBoxFor(model => model.Curp, new { @class = "form-control input-sm", placeholder = "Tu Curp", id = "Curp", required = "" })
                                    @Html.ValidationMessageFor(model => model.Curp, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="curpInputFile">Cargar Archivo del Curp:</label>
                                    @Html.TextBoxFor(model => model.ArchivoCurp, new { @class = "form-control input-sm", @type = "file", required = "", id = "UCurp" })
                                    @Html.ValidationMessageFor(model => model.ArchivoCurp, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label>No Conoces tu Curp?</label>
                                    <br />
                                    <a href="https://www.gob.mx/curp/" target="_blank">Haz Click Aqui.</a>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="etrfc">RFC con Homoclave:</label>
                                    @Html.TextBoxFor(model => model.RFC, new { @class = "form-control input-sm", placeholder = "Tu Rfc", id = "Rfc", required = "", maxlength = "14" })
                                    @Html.ValidationMessageFor(model => model.RFC, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="ethomoclave">Homoclave:</label>
                                    @Html.TextBoxFor(model => model.HomoClave, new { @class = "form-control input-sm", placeholder = "Homoclave", id = "Homoclave", required = "" })
                                    @Html.ValidationMessageFor(model => model.HomoClave, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="curpInputFile">Cargar Archivo del RFC:</label>
                                    @Html.TextBoxFor(model => model.ArchivoRfc, new { @class = "form-control input-sm", @type = "file", required = "", id = "URfc" })
                                    @Html.ValidationMessageFor(model => model.ArchivoRfc, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="etrfc">Institución de Salud:</label>
                                    @Html.DropDownList("SeguridadSocial.idInstitucion", null, new { @class = "form-control input-sm", id = "InstitucionSalud", required = "" })
                                    
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="ethomoclave">Numero de Seguro Social:</label>
                                    @Html.TextBoxFor(model => model.SeguridadSocial.strNumero, new { @class = "form-control input-sm", placeholder = "NSS", id = "NumeroSeguroSocial", required = "" })
                                    
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <label for="ethomoclave">Numero de Empleado:</label>
                                    @Html.TextBoxFor(model => model.strNumeroEmpleado, new { @class = "form-control input-sm", placeholder = "Numero de Empleado", id = "NumeroEmpleado", required = "" })
                                   
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="etSemblanza">Semblanza:</label>
                            @Html.TextAreaFor(model => model.strLogros, new { @class = "form-control", rows = 3, id = "Semblanza", required = "", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ. ]+$" })
                            @Html.ValidationMessageFor(model => model.strLogros, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="box-footer">
                        <input type="submit" value="Actualizar Datos" class="btn btn-success" id="Enviar" />
                    </div>
                </div>
            </div>

        </div>
       
    </div>
</div>
}
<noscript>
    <meta http-equiv="refresh" content="0;URL=@Url.Action("NoScript","Error")" />
</noscript>

<link href="~/Content/toastr.min.css" rel="stylesheet" />

@section scripts{
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/Validate/Personal/validar-personal-create.js"></script>
    <script src="~/Scripts/Validate/Personal/validate-personal-create-regExp.js"></script>
    <script src="~/Scripts/Validate/Personal/validate-personal-upload.js"></script>
    <script src="~/Scripts/Validate/Personal/calculate-homo-clave.js"></script>
    <script>

        $(document).ready(function () {

            $("#fotoInputFile").change(function () {

                var File = this.files;
                if (File && File[0]) {
                    ReadImage(File[0]);
                }
            })
        })
        var ReadImage = function (file) {

            var reader = new FileReader;
            var image = new Image;
            ///leemos un documento de una URL
            reader.readAsDataURL(file);
            reader.onload = function (_file) {
                image.src = _file.target.result;
                image.onload = function () {

                    var height = this.height;
                    var width = this.width;
                    var type = file.type;
                    var size = ~~(file.size / 1024) + "KB";

                    $("#targetImg").attr('src', _file.target.result);
                    $("#description").text("Tamaño de la Foto: " + size);
                    $("imgPreview").show();
                    toastr.success("Fotografía es Cargada Correctamente").show();
                }

            }

        }
        ///esta funcion se encarga de subir una imagen hacia el servidor
        var Uploadimage = function () {

            var file = $("#targetImg").get(0).files[0];
            var data = new FormData;
            data.append("ImageFile", file[0]);
            $.ajax({
                type: "Post",
                url: "/Personal/GuardarImagen",
                data: data,
                contentType: false,
                processData: false,
                success: function (response) {
                    toastr.success("Fotografía es Cargada Correctamente", "Digital-Cv dice", { timeOut: 1000 }).show();
                }
            })
        }

        $('#fotoInputFile').change(function ()
        {
            let img = $('#fotoInputFile').get(0).files;


            let data = new FormData;
            data.append('Image', img[0]);
            debugger;
            let urlTarget = "/Personal/GuardarImagen";
            $.ajax({
            url: urlTarget,
            type: 'post',
            data: data,
            contentType: false,
            processData: false,
                success: function () {
                    window.location.href = "/Personal/Create";
            }
            });

        });


    </script>
}

