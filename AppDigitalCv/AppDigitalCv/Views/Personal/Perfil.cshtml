@using AppDigitalCv.Security
@model  AppDigitalCv.ViewModels.PersonalVM
@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.AntiForgeryToken()
<div class="bs-container" style="min-height:1920px;">
    <section class="content-header">
        <h1>
            Mi Perfil
            <small>(Datos Personales)</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
            <li> <a href="#">Personal</a></li>
            <li class="active">Perfil</li>
        </ol>
    </section>
    <br />
    <div class="row">
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-5">
            <div class="box box-success">
                <div class="box-header with-border">
                </div>
                <div class="box-body">
                    <div id="imgPreview">
                        @{

                            string url = Server.MapPath("~/Imagenes/Usuarios/" + @SessionPersister.AccountSession.NombreCompleto + "/ImagePerfil/perfil.jpeg");

                            if (File.Exists(url))
                            {
                                <img src="~/Imagenes/Usuarios/@SessionPersister.AccountSession.NombreCompleto/ImagePerfil/perfil.jpeg" class="profile-user-img img-responsive img-circle">
                            }
                            else
                            {
                                <img src="~/Imagenes/Usuarios/@SessionPersister.AccountSession.NombreCompleto/ImagePerfil/perfil_anonimo.jpg" class="profile-user-img img-responsive img-circle">
                            }
                        }


                    </div>
                    <h3 class="profile-username text-center">@SessionPersister.AccountSession.TipoPersonal</h3>
                    <p class="text-muted text-center">@SessionPersister.AccountSession.TipoUsuario</p>
                    <ul class="list-group list-group-unbordered">
                        <li class="list-group-item">
                            <b id="description" class="text-navy">Datos de la Foto: </b>
                            <a class="pull-right"><span class="fa  fa-camera"></span></a>
                        </li>
                        <li class="list-group-item">
                            Añade una foto de inicio de perfil para completar tu información.
                            <a class="pull-right"><span class="fa fa-file-photo-o"></span></a>
                        </li>
                        <li class="list-group-item">
                            <label for="exampleInputFile">Cargar Foto:</label>
                            @Html.TextBoxFor(model => model.ImageFile, new { @class = "btn btn-file btn-linkedin col-xs-12 col-sm-12 col-md-12 col-lg-12", @type = "file", id = "fotoInputFile" })
                            @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                        </li>
                    </ul>
                </div>

            </div>
        </div>
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-7">
            <div class="box box-success">
                <div class="box-body">
                    <ul class="todo-list">
                        <li class="list-unstyled"><label class=" text-left">Nombre:</label> &nbsp; @Html.DisplayFor(model => model.Nombre, new { @class = "form-control input-sm  text-bold" })</li>
                        <li class="list-unstyled"><label>Apellido Paterno:</label> &nbsp; @Html.DisplayFor(model => model.ApellidoPaterno, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Apellido Materno:</label> &nbsp; @Html.DisplayFor(model => model.ApellidoMaterno, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Nacionalidad:</label> &nbsp; @Html.DisplayFor(model => model.Nacionalidad.strValor, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Estado Civil:</label> &nbsp; @Html.DisplayFor(model => model.EstadoCivil.StrDescripcion, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Sexo:</label> &nbsp; @Html.DisplayFor(model => model.StrGenero, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>CURP:</label> &nbsp; @Html.DisplayFor(model => model.Curp, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>RFC:</label> &nbsp; @Html.DisplayFor(model => model.RFC, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Homoclave:</label> &nbsp; @Html.DisplayFor(model => model.HomoClave, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Número de Empleado:</label> &nbsp; @Html.DisplayFor(model => model.strNumeroEmpleado, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Institución de Salud:</label> &nbsp; @Html.DisplayFor(model => model.SeguridadSocial.InstitucionesSalud.strValor, new { @class = "form-control input-sm" })</li>
                        <li class="list-unstyled"><label>Número de Seguridad:</label> &nbsp; @Html.DisplayFor(model => model.SeguridadSocial.strNumero, new { @class = "form-control input-sm" })</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-7 col-md-7 col-sm-12 col-xs-12 col-lg-offset-5 col-md-offset-5">
            <div class="form-group">
                <input type="button" class="btn btn-sm btn-success" value="Actualizar Información" id="btnUpdate" />
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h5 class="modal-title"><label style="font-size:medium;">Perfil</label></h5>
            </div>
            <div class="modal-body" id="myModalBodyDiv1">
            </div>
        </div>
    </div>
</div>

<link href="~/Content/toastr.min.css" rel="stylesheet" />

@section scripts
{
    <script src="~/Scripts/toastr.min.js"></script>
    <script>


        $('#btnUpdate').click(evt = () => {

            let id = @SessionPersister.AccountSession.IdPersonal;

            var url = "/digitalcv/Personal/GetUpdatePerfil?idPersonal=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        });

        $('#fotoInputFile').change(function () {
            let img = $('#fotoInputFile').get(0).files;
            console.log(img[0].type);
            if (img[0].type == "image/jpeg") {
                let data = new FormData;
                data.append('Image', img[0]);
                let urlTarget = "/digitalcv/Personal/GuardarImagen";
                $.ajax({
                    url: urlTarget,
                    type: 'post',
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function () {
                        window.location.href = "/digitalcv/Personal/Perfil";
                    }
                });
            } else {
                $(this).val("");
                toastr.warning("Solo se Permiten Imagenes en Formato JPEG", "Digital-Cv dice", { timeOut: 1000, closeButton: true });
            }



        });

    </script>
}