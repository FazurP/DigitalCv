@model AppDigitalCv.ViewModels.ProduccionesArtisticasVM
@using AppDigitalCv.Security

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "myForm", id = "myForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="bs-container" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Producciones Artisticas
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
                <li> <a href="#">Agregar</a></li>
                <li class="active">Productividad Innovadora</li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <div class="form-group">
                                        <label>Tipo de Producción Artistica:</label>
                                        @Html.DropDownList("idProduccionesArtisticas", null, new { @class = "form-control input-sm", id = "Produccion" })
                                    </div>
                                    <div class="form-group">
                                        <label>Pais:</label>
                                        @Html.DropDownList("idPais", null, new { @class = "form-control input-sm", id = "Pais" })
                                    </div>
                                    <div class="form-group">
                                        <label>Autor(es):</label>
                                        @Html.TextBoxFor(model => model.strAutor, new { @class = "form-control input-sm", id = "Autor" })
                                    </div>
                                    <div class="form-group">
                                        <label>Nombre:</label>
                                        @Html.TextBoxFor(model => model.strNombreObra, new { @class = "form-control input-sm", id = "Nombre" })
                                    </div>
                                    <div class="form-group">
                                        <label>Descripción:</label>
                                        @Html.TextAreaFor(model => model.strDescripcion, new { @class = "form-control input-sm", id = "Descripcion" })
                                    </div>
                                    <div class="form-group">
                                        <label>Impacto de la Investigación:</label>
                                        @Html.TextAreaFor(model => model.strImpactoInvestigacion, new { @class = "form-control input-sm", id = "Investigacion" })
                                    </div>
                                    <div class="form-group">
                                        <label>Impacto de la Metodologia:</label>
                                        @Html.TextAreaFor(model => model.strImpactoMetodologia, new { @class = "form-control input-sm", id = "Metodologia" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <div class="form-group">
                                        <label>Impacto del Diseño:</label>
                                        @Html.TextAreaFor(model => model.strImpactoDiseño, new { @class = "form-control input-sm", id = "Diseño" })
                                    </div>
                                    <div class="form-group">
                                        <label>Impacto de la Innovación:</label>
                                        @Html.TextAreaFor(model => model.strImpactoInnovacion, new { @class = "form-control input-sm", id = "Innovacion" })
                                    </div>
                                    <div class="form-group">
                                        <label>Fecha de Publicación:</label>
                                        <div class="input-group date">
                                            <div class="input-group-addon">
                                                <i class="fa fa-calendar"></i>
                                            </div>
                                            @Html.TextBoxFor(model => model.dteFechaPublicacion, new { @class = "form-control input-sm pull-rigth datepicker", required = "required", title = "", id = "Publicacion" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Lugar de Presentación:</label>
                                        @Html.TextBoxFor(model => model.strLugarPresento, new { @class = "form-control input-sm", id = "Presentacion" })
                                    </div>
                                    <div class="form-group">
                                        <label>Proposito:</label>
                                        @Html.DropDownList("strProposito", null, new { @class = "form-control input-sm", id = "Proposito" })
                                    </div>
                                    <div class="form-group">
                                        <label>Envidencia del Documento en PDF:</label>
                                        @Html.TextBoxFor(model => model.documentos.DocumentoFile, new { @class = "form-control input-sm", type = "file", id = "inputFileUpload" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <input type="submit" id="btnGuardar" value="Guardar Información" class="btn btn-sm btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group input-sm" id="addTable">
            <br />
            <table id="tblProductividad" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-responsive">
                <thead class="" style="color:white; background-color:#428BCA; font-size:10px;">
                    <tr>
                        <th>Nombre</th>
                        <th>Tipo de Producción</th>
                        <th>Autor</th>
                        <th>Documento</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="tblBody"></tbody>
            </table>
            <!-- Establecemos el Modal que se va a presentar cuando demos click en la edicion de los datos-->
            <div class="modal fade" id="myModal1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                            <a href="#" class="close" data-dismiss="modal">&times;</a>
                            <h5 class="modal-title"><label style="font-size:medium;">Productividad Innovadora</label></h5>
                        </div>
                        <div class="modal-body" id="myModalBodyDiv1">
                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" id="hiddenAlergiaId" />
            <!--Terminamos el modal de eliminacion-->
        </div>
    </div>
}

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />

@section scripts{
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/Validate/ProduccionesArtisticas/validate-producciones-artisticas-form.js"></script>
    <script src="~/Scripts/Validate/ProduccionesArtisticas/validate-producciones-artisticas-date.js"></script>
    <script src="~/Scripts/Validate/ProduccionesArtisticas/validate-producciones-artisticas-upload.js"></script>
    <script src="~/Scripts/Validate/ProduccionesArtisticas/validate-producciones-artistica-regExp.js?v=1"></script>


    <script>

        var AddEditar = function (id) {

            var url = "/ProduccionesArtisticas/GetProduccionUpdate?_idProduccion=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        var AddEliminar = function (id) {

            var url = "/ProduccionesArtisticas/GetProduccionDelete?_idProduccion=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        $(document).ready(function () {
            var oTable;

            BindDataTable();

            function BindDataTable() {

                if ($.fn.DataTable.isDataTable('#tblProductividad')) {
                    oTable.Draw();
                }
                else {
                    oTable = $('#tblProductividad').DataTable({

                        "bServerSide": true,
                        "sAjaxSource": '/ProduccionesArtisticas/GetParticipacionArtisticas',
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            $.ajax({
                                type: "Get",
                                data: aoData,
                                url: sSource,
                                success: fnCallback
                            })
                        },
                        "pageLength": 5,
                        "paging": true,
                        "language": {

                            "sProcessing": "Procesando...",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "dataSrc": "",
                        "columns": [

                            { "data": "strNombreObra" },
                            { "data": "ProduccionArtistica.strDescripcion" },
                            { "data": "strAutor" },
                            {
                            "data": "documentos.StrUrl",
                                "render": function (StrUrl) {
                                    return '<a target="_blank" href="/Imagenes/Usuarios/@SessionPersister.AccountSession.NombreCompleto/' + StrUrl + '"><i class="btn btn-default fa fa-file-pdf-o" style="color:red;"></i></a>'+StrUrl+''
                            }
                            },
                            {
                                "data": "id",
                                "render": function (id, type, full, meta) {

                                    return '<a href="#" onclick="AddEditar(' + id + ')"><i class="btn btn-sm btn-success glyphicon glyphicon-pencil"></i></a> <a href="#" onclick="AddEliminar(' + id + ')"><i class="btn btn-sm btn-danger glyphicon glyphicon-remove"></i></a>'
                                }
                            },

                        ]
                    });
                }
            }

        })

    </script>
}

