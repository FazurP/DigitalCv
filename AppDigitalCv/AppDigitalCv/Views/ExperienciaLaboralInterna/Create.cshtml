@model AppDigitalCv.ViewModels.ExperienciaLaboralInternaVM
@using AppDigitalCv.Security
    <noscript>
        <meta http-equiv="refresh" content="0;URL=@Url.Action("NoScript","Error")" />
    </noscript>
@using (Html.BeginForm("Create","ExperienciaLaboralInterna",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="bs-container" style="min-height:960px;margin-top:20px;">
        <section class="content-header">
            <h1>
                Experiencia Laboral Dentro de la Institución
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
                <li> <a href="#">Agregar</a></li>
                <li class="active">Experiencia Laboral</li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <div class="col-lg-6 col-md-6">
                                <div class="form-group">
                                    <div class="form-group">
                                        <label>Categoria: </label>
                                        @Html.DropDownList("idCategoria", null, new { @class = "form-control input-sm", @id = "idCategoria" })
                                    </div>
                                    <div class="form-group" style="display:none;" id="docente">
                                        <label>Tipo de Docente: </label>
                                        @Html.DropDownList("strTipoProfesor", new SelectList(new List<string> { "Seleccionar", "Profesor Titular A", "Profesor Titular B", "Profesor Asociado C" }), new { @class = "form-control input-sm", @id = "tipoDocente" })
                                    </div>
                                    <div class="form-group">
                                        <label>Area:</label>
                                        @Html.DropDownList("idArea", null, new { @class = "form-control input-sm", @id = "idArea" })
                                    </div>
                                    <div class="form-group">
                                        <label>Es el puesto Actual?</label>
                                        <br />
                                        Si @Html.RadioButtonFor(model => model.bitPuestoActual,true,new { @id="paSi"})
                                        No @Html.RadioButtonFor(model => model.bitPuestoActual,false,new { @id="paNo"})
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6">
                                <div class="form-group">
                                    <label>Fecha de Inicio</label>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(model => model.dteFechaInicio, new { @class = "form-control input-sm pull-rigth datepicker", required = "required", title = "Fecha de Entrega del Premio", id = "dteFechaInicio" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Fecha de Termino</label>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(model => model.dteFechaTermino, new { @class = "form-control input-sm pull-rigth datepicker", required = "required", title = "Fecha de Entrega del Premio", id = "dteFechaTermino" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Actividad Desempeñada</label>
                                    @Html.TextBoxFor(model => model.strActividadDesempeñada, new { @class = "form-control input-sm", id = "strActividadDesempeñada" })
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <input type="submit" id="btnGuardar" value="Guardar Información" class="btn btn-sm btn-success" />
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group input-sm">
            <!-- Agregamos la tabla de forma dinamica  style="display:none" -->
            <div class="form-group" id="addTable">
                <br />
                <table id="tblExperienci" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-hover">
                    <thead class="table table table-condensed table-bordered table-responsive table-hover" style="color:white; background-color:#428BCA; font-size:10px;">
                        <tr>
                            <th>Programa Educativo</th>
                            <th>Area</th>
                            <th>Actividad Desempeñada</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tblBody"></tbody>
                </table>
                <!-- Establecemos el Modal que se va a presentar cuando demos click en la edicion de los datos-->
                <div class="modal fade" id="myModal1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                                <a href="#" class="close" data-dismiss="modal">&times;</a>
                                <h5 class="modal-title"><label style="font-size:medium;">Participaciones</label></h5>
                            </div>
                            <div class="modal-body" id="myModalBodyDiv1">
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="hiddenAlergiaId" />
                <!--Terminamos el modal de eliminacion-->
            </div>
        </div>
    </div>

}

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />
@section scripts{

    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/Validate/ExperienciaLaboralInterna/validate-experiencia-laboral-interna-regExp.js"></script>
    <script src="~/Scripts/Validate/ExperienciaLaboralInterna/validate-experiencia-laboral-interna-form.js?v=21"></script>
    <script src="~/Scripts/Validate/ExperienciaLaboralInterna/fixdom-experiencia-laboral-interna.js"></script>
    <script>

        var AddEditar = function (id) {

            var url = "/digitalcv/ExperienciaLaboralInterna/GetExperienciaEdit?_idExperiencia=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        var AddEliminar = function (id) {

            var url = "/digitalcv/ExperienciaLaboralInterna/GetExperiencia?_idExperiencia=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        $(document).ready(function () {

        $('#idCategoria').select2();
        $('#strTipoProfesor').select2();
        $('#idArea').select2();
        $('#idProgramaEducativo').select2();

            $("#idCategoria").change(function () {
                var idCategoria = $(this).val();

                $.ajax({
                    type: "Post",
                    url: "/digitalcv/ExperienciaLaboralInterna/GetTipoContratoByCategoria?idCategoria=" + idCategoria,
                    contentType: "html",
                    success: function (response) {
                        $("#idTipoContrato").empty();
                        $("#idTipoContrato").append(response);
                    },
                    error: function (error) {

                    }
                });
            });

            var oTable;

            BindDataTable();

            function BindDataTable() {

                if ($.fn.DataTable.isDataTable('#tblExperienci')) {
                    oTable.Draw();
                }
                else {
                    oTable = $('#tblExperienci').DataTable({

                        "bServerSide": true,
                        "sAjaxSource": '/digitalcv/ExperienciaLaboralInterna/GetExperiencias',
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            $.ajax({
                                type: "Get",
                                data: aoData,
                                url: sSource,
                                success: fnCallback
                            })
                        },
                        "pageLength": 10,
                        "paging": true,
                        "language": {

                            "sProcessing": "Procesando...",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "dataSrc": "",
                        "columns": [

                            { "data": "ProgramaEducativo.strDescripcion" },
                            { "data": "Area.strDescripcion" },
                            { "data": "strActividadDesempeñada" },

                            {
                                "data": "id",
                                "render": function (id, type, full, meta) {

                                    return '<a href="#" onclick="AddEditar(' + id + ')"><i class="btn btn-sm btn-success glyphicon glyphicon-pencil"></i></a> <a href="#" onclick="AddEliminar(' + id + ')"><i class="btn btn-sm btn-danger glyphicon glyphicon-remove"></i></a>'
                                }
                            },
                        ]
                    });
                }
            }

        })

    </script>
}
