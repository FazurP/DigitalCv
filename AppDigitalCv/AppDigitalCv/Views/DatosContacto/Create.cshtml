@model AppDigitalCv.ViewModels.DatosContactoVM
@using AppDigitalCv.Security
@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Create", "DatosContacto"))
{
    @Html.AntiForgeryToken()

    <div class="bs-container" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Datos de Contactos
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
                <li> <a href="#"> Datos</a></li>
                <li class="active"> Datos del Contacto </li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <!-- /.box-tools -->
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div role="form">
                            <div class="form-group">
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <div class="form-group">
                                        <label>Nombre(s): </label>
                                        @Html.TextBoxFor(model => model.strNombre, new { @class = "form-control input-sm", placeholder = "Nombre", required = "", id = "Nombre", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ ]+$" })
                                    </div>
                                    <div class="form-group">
                                        <label>Apellido Paterno:</label>
                                        @Html.TextBoxFor(model => model.strApellidoPaterno, new { @class = "form-control input-sm", placeholder = "Apellido Paterno", required = "", id = "ApellidoPaterno", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ ]+$" })
                                    </div>
                                    <div class="form-group">
                                        <label>Apellido Materno: </label>
                                        @Html.TextBoxFor(model => model.strApellidoMaterno, new { @class = "form-control input-sm", placeholder = "Apellido Materno", required = "", id = "ApellidoMaterno", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ ]+$" })
                                    </div>
                                    <div class="form-group ">
                                        <label>Telefono Celular:</label>
                                        @Html.TextBoxFor(model => model.TelefonoCelular, new { @class = "form-control input-sm", type = "tel", placeholder = "Tu Número Celular", required = "", pattern = "^[0-9]+$", id = "TelefonoCelular" })
                                        @Html.ValidationMessageFor(model => model.TelefonoCelular, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <div class="form-group ">
                                        <label>Telefono Casa:</label>
                                        @Html.TextBoxFor(model => model.TelefonoCasa, new { @class = "form-control input-sm", type = "tel", placeholder = "Tu Número Casa", required = "", pattern = "^[0-9]+$", id = "TelefonoCasa" })
                                        @Html.ValidationMessageFor(model => model.TelefonoCasa, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group ">
                                        <label>Telefono de Recados:</label>
                                        @Html.TextBoxFor(model => model.TelefonoRecados, new { @class = "form-control input-sm", type = "tel", placeholder = "Tu Número para Recados", required = "", pattern = "^[0-9]+$", id = "TelefonoRecados" })
                                        @Html.ValidationMessageFor(model => model.TelefonoRecados, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group ">
                                        <label>E-mail Personal:</label>
                                        @Html.TextBoxFor(model => model.MailPersonal, new { @class = "form-control input-sm", placeholder = "Tu email personal", required = "", pattern = "[a-zA-Z0-9._-]{3,25}[@]{1}(hotmail|gmail|outlook|yahoo){1}[.]{1}(com|mx|net){1}", id = "EmailPersonal" })
                                        @Html.ValidationMessageFor(model => model.MailPersonal, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group ">
                                        <label>Dirección</label>
                                        @Html.TextBoxFor(model => model.strDireccion, new { @class = "form-control input-sm", placeholder = "Dirección", required = "", id = "Direccion", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ0-9, ]+$" })
                                        @Html.ValidationMessageFor(model => model.MailPersonal, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                                    <div class="form-group ">
                                        <label>Nombre de Usuario en Facebook:</label>
                                        @Html.TextBoxFor(model => model.NombreFacebook, new { @class = "form-control input-sm", placeholder = "Tu usuario en Facebook", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ ]+$", id = "Facebook" })
                                        @Html.ValidationMessageFor(model => model.NombreFacebook, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group ">
                                        <label>Nombre de Usuario en Twitter:</label>
                                        @Html.TextBoxFor(model => model.NombreTwitter, new { @class = "form-control input-sm", placeholder = "Tu usuario en Twitter", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ ]+$", id = "Twitter" })
                                        @Html.ValidationMessageFor(model => model.NombreTwitter, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Asignar Como Contacto de Emergencia?</label>
                                        <br />
                                        Si @Html.RadioButtonFor(model => model.bitContactoEmergencia, true)
                                        No @Html.RadioButtonFor(model => model.bitContactoEmergencia, false)
                                    </div>
                                </div>
                                <div class="col-lg-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="form-group">
                                        <input type="submit" value="Guardar Información" class="btn btn-sm btn-success" id="btnGuardar" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <table id="myDataTableDatosContacto" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-responsive">
            <thead style="color:white; background-color:#428BCA; font-size:10px;">
                <tr>
                    <th>Nombre</th>
                    <th>Telefono Celular</th>
                    <th>Contacto Emergencia</th>
                    <th>Acciones</th>
                </tr>
            </thead>
        </table>
        <div class="modal fade" id="myModal1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                        <a href="#" class="close" data-dismiss="modal">&times;</a>
                        <h5 class="modal-title"><label style="font-size:medium;">Datos del Contacto</label></h5>
                    </div>
                    <div class="modal-body" id="myModalBodyDiv1" style="background-color:#FDFDFE;">
                    </div>
                </div>
            </div>
        </div>
    </div>


}

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />

@section scripts
{

    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>

    <script src="~/Scripts/Validate/DatosContacto/validate-datos-contacto-email.js"></script>
    <script src="~/Scripts/Validate/DatosContacto/validate-datos-contacto-form.js"></script>
    <script src="~/Scripts/Validate/DatosContacto/validate-datos-contacto-regExp.js"></script>
    <script>

        var AddDisplay = function (id) {

            var url = "/DatosContacto/DisplayDatosContacto?id=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        var AddEditDatosContacto = function (idDatosContacto) {
            var url = "/DatosContacto/AddEditDatosContactoId?id=" + idDatosContacto;
            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");
            })
        };
        var ShowDeletetDatosContacto = function (idDatosContacto) {
            var url = "/DatosContacto/GetDeleteDatosContactoId?idPersonal=" + idDatosContacto;
            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");
            })
        };

        $(document).ready(function () {

            $('#myDataTableDatosContacto').DataTable({
                "language": {

                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "ajax": {
                    "url": '/DatosContacto/ConsultarDatosContacto/',
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": ""
                },
                "paging": true,
                "columns": [

                    { "data": "strNombre"},
                    { "data": "TelefonoCelular"},
                    { "data": "bitContactoEmergencia"}
                    ,
                    {
                        "data": "IdDatosContacto",
                        "render": function (idDatosContacto, type, full, meta) {
                            return ' <a href="#" class="" onclick="AddDisplay(' + idDatosContacto + ')"><i class="btn btn-sm btn-default">Ver Datos</i></a> <a href="#" onclick="AddEditDatosContacto(' + idDatosContacto + ')"><i class="btn btn-sm btn-success">Actualizar</i></a> <a href="#" onclick="ShowDeletetDatosContacto(' + idDatosContacto + ')"><i class="btn btn-sm btn-google">Eliminar</i></a>'
                        }
                    }
                    ,
                ]
            });

        });
    </script>

}