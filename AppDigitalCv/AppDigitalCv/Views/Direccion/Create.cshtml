@using AppDigitalCv.Security
@model AppDigitalCv.ViewModels.DireccionVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create","Direccion",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="bs-container" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Dirección
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i>Inicio </a></li>
                <li> <a href="#">Dirección</a></li>
                <li class="active">Direccion Personal</li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">

                        <!-- /.box-tools -->
                    </div>
                    <div role="form">
                        <div class="box-body">
                            <div class="form-group">
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                        <div class="form-group">
                                            <label for="etCalle">Calle:</label>
                                            @Html.TextBoxFor(model => model.StrCalle, new { @class = "form-control input-sm", placeholder = "Calle", required = "", id = "Calle", pattern = "^[a-záéíóúñA-ZÁÉÍÓÚÑ0-9.# ]+$" })
                                        </div>
                                        <div class="form-group">
                                            <label for="etNoExterior">No° Exterior:</label>
                                            @Html.TextBoxFor(model => model.StrNumeroExterior, new { @class = "form-control input-sm", placeholder = "Numero Exterior", required = "", id = "NExterior", pattern = "^[0-9a-zA-Z]+$" })
                                        </div>
                                        <div class="form-group">
                                            <label for="etNoInterior">No.Interior:</label>
                                            @Html.TextBoxFor(model => model.StrNumeroInterior, new { @class = "form-control input-sm", placeholder = "Numero Interior", required = "", id = "NInterior", pattern = "^[0-9a-zA-Z]+$" })
                                        </div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-12 col-md-6 col-lg-6">
                                        <label>Estado:</label>
                                        @Html.DropDownList("IdEstado", null, htmlAttributes: new { @class = "form-control input-sm", id = "Estados" })
                                    </div>
                                    <div class="form-group">
                                        <div class="form-group col-lg-6 col-md-6 col-xs-12 col-sm-12">
                                            <label>Municipio:</label>
                                            @Html.DropDownList("IdMunicipio", null, htmlAttributes: new { @class = "form-control input-sm", id = "Municipios" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="form-group col-lg-3 col-md-3 col-xs-12 col-sm-12">
                                            <label>Colonia</label>
                                            @Html.DropDownList("IdColonia", null, htmlAttributes: new { @class = "form-control input-sm", id = "IdColonia" })
                                        </div>
                                        <div class="form-group col-lg-3 col-md-3 col-xs-12 col-sm-12">
                                            <label for="etCodigoPostal"> Codigo Postal: </label>
                                            @Html.TextBoxFor(model => model.Colonia.intCp, new { @class = "form-control input-sm", placeholder = "Codigo Postal", id = "codigoPostal" })
                                        </div>
                                    </div>
                                </div>                                                              
                                <div class="row">
                                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                        <div class="form-group">
                                            <label>Es la Dirección Actual?</label>
                                            <br />
                                            Si @Html.RadioButtonFor(model => model.bitActual, true, new { id="si" })
                                            No @Html.RadioButtonFor(model => model.bitActual, false, new { id = "no" })
                                        </div>
                                     
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                            <input type="submit" value="Guardar Informaciòn" class="btn btn-sm btn-success" id="Enviar" />
                                        </div>
                                    </div>
                                </div>                         
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group input-sm" id="addTable">
            <br />
            <table id="tblDireccion" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-responsive">
                <thead style="color:white; background-color:#428BCA; font-size:10px;">
                    <tr>
                        <th>Calle</th>
                        <th>Colonia</th>
                        <th>Dirección Actual</th>
                        <th>Número Exterior</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="tblBody"></tbody>
            </table>
            <!-- Establecemos el Modal que se va a presentar cuando demos click en la edicion de los datos-->
            <div class="modal fade" id="myModal1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                            <a href="#" class="close" data-dismiss="modal">&times;</a>
                            <h5 class="modal-title"><label style="font-size:medium;">Dirección</label></h5>
                        </div>
                        <div class="modal-body" id="myModalBodyDiv1">
                        </div>
                    </div>
                </div>
            </div>
            <input type="hidden" id="hiddenDirecciondId" />
            <!--Terminamos el modal de eliminacion-->
        </div>
    </div>

}

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />
@section scripts{

    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/Validate/Direccion/validate-direccion-form.js"></script>
    <script src="~/Scripts/Validate/Direccion/validate-direccion-regExp.js"></script>
    <!-- JS para llenar el dropdowList de estados por medio de la seleccion de un pais -->
    <script>

          var AddDisplay = function (id) {

            var url = "/digitalcv/Direccion/DisplayDireccion?id=" + id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        var AddEditar = function (IdDireccion) {

            var url = "/digitalcv/Direccion/GeDireccion?IdDireccion=" + IdDireccion;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        $(document).ready(function () {

        $('#Estados').select2();
        $('#Municipios').select2();
        $('#IdColonia').select2();

            var oTable;

            BindDataTable();

            function BindDataTable() {

                if ($.fn.DataTable.isDataTable('#tblDireccion')) {
                    oTable.Draw();
                }
                else {
                    oTable = $('#tblDireccion').DataTable({

                        "bServerSide": true,
                        "sAjaxSource": '/digitalcv/Direccion/GetDireccion',
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            $.ajax({
                                type: "Get",
                                data: aoData,
                                url: sSource,
                                success: fnCallback
                            })
                        },
                        "pageLength":10,
                        "paging": true,
                        "language": {

                            "sProcessing": "Procesando...",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "dataSrc": "",
                        "columns": [

                            { "data": "StrCalle" },
                            { "data": "Colonia.StrValor" },
                            { "data": "bitActual" },
                            { "data": "StrNumeroExterior" },

                            {
                                "data": "IdDireccion",
                                "render": function (IdDireccion, type, full, meta) {

                                    return '  <a href="#" class="" onclick="AddDisplay(' + IdDireccion + ')"><i class="btn btn-sm btn-default glyphicon glyphicon-search"></i></a> <a href="#" onclick="AddEditar(' + IdDireccion + ')"><i class="btn btn-sm btn-danger glyphicon glyphicon-remove"></i></a>'
                                }
                            },
                        ]
                    });
                }
            }


            $("#Pais").change(function () {
                var paisId = $(this).val();

                $.ajax({
                    type: "Post",
                    url: "/digitalcv/Direccion/ConsultarEstadosByPais?idPais=" + paisId,
                    contentType: "html",
                    success: function (response) {
                        $("#Estados").empty();
                        $("#Estados").append(response);
                    },
                    error: function (error) {

                    }
                });
            });

            // -- JS para la consulta de municipios por estado, se llena dropdownlist de municipios
            $("#Estados").change(function () {
                var estadoId = $(this).val();

                $.ajax({
                    type: "Post",
                    url: "/digitalcv/Direccion/ConsultarMunicipiosByEstado?idEstado=" + estadoId,
                    contentType: "html",
                    success: function (response) {
                        $("#Municipios").empty();
                        $("#Municipios").append(response);
                    },
                    error: function (error) {

                    }
                });
            });

            //-- JS para la consulta de colonias por municipio, se llena dropdownlist de colonias
            $("#Municipios").change(function () {
                var municipioId = $(this).val();

                $.ajax({
                    type: "Post",
                    url: "/digitalcv/Direccion/ConsultarColoniasByMunicipio?idMunicipio=" + municipioId,
                    contentType: "html",
                    success: function (response) {
                        $("#IdColonia").empty();
                        $("#IdColonia").append(response);
                    },
                    error: function (error) {

                    }
                });
            });

            // -- JS para la consulta de codigo postal por medio de una colonia
            $("#IdColonia").change(function () {
                var coloniaId = $(this).val();

                $.ajax({
                    type: "Post",
                    url: "/digitalcv/Direccion/ConsultarCodigoPostalByColonia?idColonia=" + coloniaId,
                    contentType: "json",
                    success: function (response) {

                        $("#codigoPostal").prop('disabled', true);
                        $("#codigoPostal").css("border-bottom-color", "#00A65A");
                        $("#codigoPostal").val(response);

                    },
                    error: function (error) {

                    }
                });
            });

        });

    </script>
}