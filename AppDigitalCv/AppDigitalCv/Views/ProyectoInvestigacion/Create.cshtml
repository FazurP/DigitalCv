@model AppDigitalCv.ViewModels.ProyectoInvestigacionVM
@using AppDigitalCv.Security

@using (Html.BeginForm("Create", "ProyectoInvestigacion", FormMethod.Post, new { name = "myForm", id = "myForm", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="bs-container" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Proyectos de Investigación Aplicada y Desarrollo Tecnológico
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
                <li> <a href="#">Agregar</a></li>
                <li class="active">Proyectos</li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <div class="form-group">
                                        <label>Titulo del Proyecto</label>
                                        @Html.TextBoxFor(model => model.strTituloProyecto, new { @class = "form-control input-sm", id = "txtTituloProyecto" })
                                    </div>
                                    <div class="form-group">
                                        <label>Nombre del Patrocinador</label>
                                        @Html.TextBoxFor(model => model.strNombrePatrocinador, new { @class = "form-control input-sm", id = "txtNombrePatrocinador" })
                                    </div>
                                    <div class="form-group">
                                        <label>Fecha de Inicio del Proyecto</label>
                                        @Html.TextBoxFor(model => model.dteFechaInicio, new { @class = "form-control input-sm", id = "dteFechaInicio", type = "date" })
                                    </div>
                                    <div class="form-group">
                                        <label>Fecha de Fin del Proyecto</label>
                                        @Html.TextBoxFor(model => model.dteFechaTermino, new { @class = "form-control input-sm", id = "dteFechaFin", type = "date" })
                                    </div>
                                    <div class="form-group">
                                        <label>Tipo de Patrocinador</label>
                                        @Html.DropDownList("strTipoPatrocinador", null, new { @class = "form-control input-sm", id = "ddlTipoPatrocinador" })
                                    </div>
                                    <div class="form-group">
                                        <label>Investigadores Participantes</label>
                                        @Html.TextAreaFor(model => model.strInvestigadoresParticipantes, new { @class = "form-control input-sm", id = "txtInvestigadores" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <div class="form-group">
                                        <label>Alumnos Participantes</label>
                                        @Html.TextAreaFor(model => model.strAlumnosParticipantes, new { @class = "form-control input-sm", id = "txtAlumnos" })
                                    </div>
                                    <div class="form-group">
                                        <label>Actividades Realizadas</label>
                                        @Html.TextAreaFor(model => model.strActividadesRealizadas, new { @class = "form-control input-sm", id = "txtActividades" })
                                    </div>
                                    <div class="form-group">
                                        <label>Convocatoria</label>
                                        @Html.TextBoxFor(model => model.strConvocatoria, new { @class = "form-control input-sm", id = "txtConvocatoria" })
                                    </div>
                                    <div class="form-group">
                                        <label>Evidencia del Resumen del Proyecto en PDF</label>
                                        @Html.TextBoxFor(model => model.documentos.DocumentoFile, new { @class = "form-control input-sm", id = "inputFileUploadResumen", type = "file" })
                                    </div>
                                    <div class="form-group">
                                        <label>Es un Proyecto Tecnológico</label>
                                        <br />
                                        Si @Html.RadioButtonFor(model => model.bitProyectoTecnologico, true, new { @class = "", id = "pt" })
                                        No @Html.RadioButtonFor(model => model.bitProyectoTecnologico, false, new { @class = "", id = "pt" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <input type="submit" id="btnGuardar" value="Guardar Información" class="btn btn-sm btn-success" />
                            </div>
                        </div>
                        <div class="">
                            <!-- Agregamos la tabla de forma dinamica  style="display:none" -->
                            <div class="form-group" id="addTable">
                                <br />
                                <table id="tblProyecto" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-responsive">
                                    <thead class="" style="color:white; background-color:#428BCA; font-size:10px;">
                                        <tr>
                                            <th>Titulo del Proyecto</th>
                                            <th>Documento</th>
                                            <th>Editar</th>
                                            <th>Eliminar</th>

                                        </tr>
                                    </thead>
                                    <tbody id="tblBody"></tbody>
                                </table>
                                <!-- Establecemos el Modal que se va a presentar cuando demos click en la edicion de los datos-->
                                <div class="modal fade" id="myModal1">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                                                <a href="#" class="close" data-dismiss="modal">&times;</a>
                                                <h5 class="modal-title"><label style="font-size:medium;">Proyecto de Investigación Aplicada y Desarrollo Tecnológico </label></h5>
                                            </div>
                                            <div class="modal-body" id="myModalBodyDiv1">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <input type="hidden" id="hiddenAlergiaId" />
                                <!--Terminamos el modal de eliminacion-->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />

@section scripts{
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/Validate/ProyectoInvestigacion/validate-proyecto-investigacion-form.js"></script>
    <script src="~/Scripts/Validate/ProyectoInvestigacion/validate-proyecto-investigacion-upload.js"></script>
    <script src="~/Scripts/Validate/ProyectoInvestigacion/validate-proyecto-investigacion-regExp.js"></script>

    <script>
        var AddEditar = function (id) {

    var url = "/ProyectoInvestigacion/GetProyectoUpdate?_idProyecto=" + id;

    $("#myModalBodyDiv1").load(url, function () {
        $("#myModal1").modal("show");

    })

};

var AddEliminar = function (id) {

    var url = "/ProyectoInvestigacion/GetProyectoDelete?_idProyecto=" + id;

    $("#myModalBodyDiv1").load(url, function () {
        $("#myModal1").modal("show");

    })

};

$(document).ready(function () {
    var oTable;

    BindDataTable();

    function BindDataTable() {

        if ($.fn.DataTable.isDataTable('#tblProyecto')) {
            oTable.Draw();
        }
        else {
            oTable = $('#tblProyecto').DataTable({

                "bServerSide": true,
                "sAjaxSource": '/ProyectoInvestigacion/GetProyectos',
                "fnServerData": function (sSource, aoData, fnCallback) {
                    $.ajax({
                        type: "Get",
                        data: aoData,
                        url: sSource,
                        success: fnCallback
                    })
                },
                "pageLength": 5,
                "paging": true,
                "language": {

                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "dataSrc": "",
                "columns": [

                    { "data": "strTituloProyecto" },

                    {
                        "data": "documentos.StrUrl",
                        "render": function (StrUrl) {
                            return '<a target="_blank" href="/Imagenes/Usuarios/@SessionPersister.AccountSession.NombreCompleto/' + StrUrl + '"><i class="btn btn-default fa fa-file-pdf-o" style="color:red;"></i></a>'+StrUrl+''
                        }
                    },

                    {
                        "data": "id",
                        "render": function (id, type, full, meta) {

                            return '<a href="#" onclick="AddEditar(' + id + ')"><i class="btn btn-sm btn-success fa fa-pencil-square-o"></i></a>'
                        }
                    },
                    {
                        "data": "id",
                        "render": function (id, type, full, meta) {

                            return '<a href="#" onclick="AddEliminar(' + id + ')"><i class="btn btn-sm btn-google glyphicon glyphicon-trash"></i></a>'
                        }
                    },
                ]
            });
        }
    }

})
    </script>
}


