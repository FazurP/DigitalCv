@using AppDigitalCv.Security
@model AppDigitalCv.ViewModels.CursosVM
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Cursos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="bs-container" style="min-height:960px;">
        <section class="content-header">
            <h1>
                Cursos Impartidos
                <small>(Agregar)</small>
            </h1>
            <ol class="breadcrumb">
                <li><a href="#"> <i class="fa fa-dashboard"></i> Inicio </a></li>
                <li> <a href="#"> Cursos</a></li>
                <li class="active"> Cursos Impartidos </li>
            </ol>
        </section>
        <br />
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h5 class="box-title">
                            <label class="text-success emailtitleletter">
                                <i class="text-success fa fa-graduation-cap"></i>
                                @SessionPersister.AccountSession.NombreCompleto
                            </label>
                            &nbsp;&nbsp;
                            <span class="emailtitleletter btn-link"><i class="fa fa-graduation-cap"></i></span>@Html.ActionLink("Agregar Más Cursos", "Create", "Curso", null, htmlAttributes: new { @class = "emailtitleletter text-right btn-link " })
                            <span class="emailtitleletter btn-link"><i class="glyphicon glyphicon-tag"></i></span>@Html.ActionLink("Agregar Institución", "Create", "InstitucionSuperior", null, htmlAttributes: new { @class = "emailtitleletter text-right btn-link " })
                        </h5>
                        <!-- /.box-tools -->
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <div class="form-group">
                                <div class="col-sm-6 col-md-6 col-lg-6">
                                    <div class="form-group">
                                        <label>Cursos:&nbsp;&nbsp;</label>
                                        @Html.DropDownList("IdCurso", null, htmlAttributes: new { @class = "form-control input-sm", id = "IdCurso" })
                                        <label>Institución:</label>
                                        @Html.DropDownList("IdInstitucionSuperior", null, htmlAttributes: new { @class = "form-control input-sm", id = "IdInstitucionSuperior" })
                                        <label>Fecha de Inicio:</label>
                                        @Html.TextBoxFor(model => model.FechaInicio, new { @class = "form-control input-sm", placeholder = "Fecha Inicial", required = "", type = "date", id = "FechaInicio" })
                                    </div>
                                </div>
                                <div class="col-sm-6 col-md-6 col-lg-6">
                                    <label>Fecha de Final:</label>
                                    @Html.TextBoxFor(model => model.FechaTermino, new { @class = "form-control input-sm", required = "", type = "date", id = "FechaTermino" })
                                    @if (ViewBag.ErrorFechaComparacion != null)
                                    {
                                        <label class="text-red">
                                            @ViewBag.ErrorFechaComparacion
                                        </label>
                                        <br />
                                    }
                                    <label>Existe Evidencia:</label>
                                    <br />
                                    <input type="radio" id="rdbSi" name="seleccion" value="SI " class="custom-control-input"><label for="si">SI</label>
                                    <input type="radio" id="rdbNo" name="seleccion" value="NO" class="custom-control-input" checked="checked"><label for="no">NO</label>
                                    <br />
                                    <label>Evidencia Documentada(Documento en formato PDF):</label>
                                    @Html.TextBoxFor(model => model.DocumentoPDF, new { @class = "form-control", @type = "file", required = "", id = "DocumentoPDF" })
                                    @if (ViewBag.ErrorArchivo != null)
                                    {
                                        <label class="text-red">
                                            @ViewBag.ErrorArchivo
                                        </label>
                                    }
                                </div>
                                <br />
                                <div class="col-sm-6 col-md-6 col-lg-6">
                                    <br />
                                    <input type="submit" value="Guardar" class="btn btn-sm btn-success" id="btnSubmit" />
                                </div>
                            </div>
                        </div>
                        <!--Iniciamos tabla y modal-->
                        <div class="form-group" id="addTable">
                            <br />
                            <table id="tblDocumentos" border="1" style="width: 100%; border:solid 1px #428BCA; border-collapse: collapse;" class="table table-hover">
                                <thead class="table table table-condensed table-bordered table-responsive table-hover" style="color:white; background-color:#428BCA; font-size:10px;">
                                    <tr>
                                        <th>Fecha de Inicio</th>
                                        <th>Fecha de Termino</th>
                                        <th>Descripción del curso</th>
                                        <th>Eliminar</th>
                                    </tr>
                                </thead>
                                <tbody id="tblBody"></tbody>
                            </table>

                            <!-- Establecemos el Modal que se va a presentar cuando demos click en la edicion de los datos-->
                            <div class="modal fade" id="myModal1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header" style="background-color:#3C8DBC;color:white;">
                                            <a href="#" class="close" data-dismiss="modal">&times;</a>
                                            <h5 class="modal-title"><label style="font-size:medium;">Cursos</label></h5>
                                        </div>
                                        <div class="modal-body" id="myModalBodyDiv1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <input type="hidden" id="hiddenEnfermedadId" />
                            <!--Terminamos el modal de eliminacion-->

                        </div>
                        <!-- Terminamos tabla y modal-->
                    </div>
                </div>
            </div>
        </div>
    </div>

}

<link href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" rel="stylesheet" />
@section scripts
{
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/Validate/Cursos/validate-cursos-form.js?v=1"></script>
    <script src="~/Scripts/Validate/Cursos/validate-cursos-upload.js?v=1"></script>

    <script>

        var AddEditar = function (idDeportePersonal) {

            var url = "/HabitosPersonales/AddEditHabitosPersonales?idDeportePersonal=" + idDeportePersonal;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            })

        };

        var AddDelete = function (Id) {
            var url = "/Cursos/DeleteCursosPersonal?Id=" + Id;

            $("#myModalBodyDiv1").load(url, function () {
                $("#myModal1").modal("show");

            });
        };
        $(document).ready(function () {
            var oTable;

            BindDataTable();

            function BindDataTable() {

                if ($.fn.DataTable.isDataTable('#tblDocumentos')) {
                    oTable.Draw();
                }
                else {
                    oTable = $('#tblDocumentos').DataTable({
                        "bServerSide": true,
                        "sAjaxSource": '/Cursos/GetCursosPersonales',
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            $.ajax({
                                type: "Get",
                                data: aoData,
                                url: sSource,
                                success: fnCallback
                            })
                        },
                        "pageLength": 5,
                        "paging": true,
                        "language": {

                            "sProcessing": "Procesando...",
                            "sLengthMenu": "Mostrar _MENU_ registros",
                            "sZeroRecords": "No se encontraron resultados",
                            "sEmptyTable": "Ningún dato disponible en esta tabla",
                            "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix": "",
                            "sSearch": "Buscar:",
                            "sUrl": "",
                            "sInfoThousands": ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst": "Primero",
                                "sLast": "Último",
                                "sNext": "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "dataSrc": "",
                        "columns": [

                            { "data": "FechaInicio" },
                            { "data": "FechaTermino" },
                            { "data": "CursoDomainModel.StrDescripcion" },
                            /*{
                                "data": "Id",
                                "render": function (Id, type, full, meta) {

                                    return '<a href="#" onclick="AddEditar(' + Id + ')"><i class="btn btn-sm btn-success fa fa-pencil-square-o"></i></a>'
                                }
                            },*/
                            {
                                "data": "Id",
                                "render": function (Id, type, full, meta) {

                                    return '<a href="#" onclick="AddDelete(' + Id + ')"><i class="btn btn-sm btn-google glyphicon glyphicon-trash"></i></a>'
                                }
                            },
                        ]
                    });
                }
            }



        });
    </script>
}
